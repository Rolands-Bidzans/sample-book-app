name: Sample Book App Workflow

on: 
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-docker-image:
    runs-on: self-hosted
    steps:
      - name: echo "Building docker image..."
      - run: powershell "docker build -t rolandstech/sample-book-app ."
      - name: powershell "docker push rolandstech/sample-book-app"
      - run: powershell "docker push rolandstech/sample-book-app"
  deploy-dev:
    runs-on: self-hosted
    needs: [build-docker-image]
    steps:
      - run: echo "Deployment triggered on DEV env..."
  test-dev:
    runs-on: self-hosted
    needs: [deploy-dev]
    steps:
      - run: echo "Tests triggered on DEV env..."
  deploy-stg:
    runs-on: self-hosted
    needs: [test-dev]
    steps:
      - run: echo "Deployment triggered on STG env..."
  test-stg:
    runs-on: self-hosted
    needs: [deploy-stg]
    steps:
      - run: echo "Tests triggered on STG env..."
  deploy-prd:
    runs-on: self-hosted
    needs: [test-stg]
    steps:
      - run: echo "Deployment triggered on PRD env..."
  test-prd:
    runs-on: self-hosted
    needs: [deploy-prd]
    steps:
      - run: echo "Tests triggered on PRD env..."


# def buildDockerImage() {
#     echo "Docker version..."
    
#     // Securely pass the Docker credentials into the Docker login command using 'withCredentials'
#     withCredentials([usernamePassword(credentialsId: 'rolandstech-dockerhub', usernameVariable: 'DOCKERHUB_USR', passwordVariable: 'DOCKERHUB_PSW')]) {
#         echo "Logging in to DockerHub..."
#         powershell "docker login -u $DOCKERHUB_USR -p $DOCKERHUB_PSW"
#     }
    
#     // Build Docker image
#     echo "Building docker image..."
#     powershell "docker build -t rolandstech/sample-book-app ."
    
#     // Push the image to DockerHub
#     echo "Pushing image to DockerHub..."
#     powershell "docker push rolandstech/sample-book-app"
# }